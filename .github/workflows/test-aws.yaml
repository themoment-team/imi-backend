name: AWS Environment Variables Test

on:
  # 수동으로 워크플로우 실행 가능
  workflow_dispatch:

  # 선택적: 특정 브랜치에 푸시할 때 실행
  push:
    branches:
      - feat/cicd  # 필요한 브랜치로 변경하세요

jobs:
  test-aws-env:
    environment: Deploy Environment
    runs-on: ubuntu-latest
    # 환경 변수로 AWS 자격 증명 직접 설정
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ap-northeast-2
      AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # AWS CLI 버전 확인
      - name: Check AWS CLI version
        run: aws --version

      # AWS 자격 증명 테스트
      - name: Test AWS authentication
        run: |
          echo "Checking AWS caller identity..."
          aws sts get-caller-identity

      # S3 버킷 목록 확인
      - name: List S3 buckets
        run: |
          echo "Listing S3 buckets..."
          aws s3 ls

      # 대상 S3 버킷 확인 (있는 경우)
      - name: Check target S3 bucket
        if: env.AWS_BUCKET_NAME != ''
        run: |
          echo "Checking target S3 bucket..."
          if aws s3 ls s3://${{ env.AWS_BUCKET_NAME }} &>/dev/null; then
            echo "Target bucket exists and is accessible!"
            aws s3 ls s3://${{ env.AWS_BUCKET_NAME }} --recursive | head -n 5
          else
            echo "Cannot access target bucket or it doesn't exist"
          fi

      # CodeDeploy 앱 확인
      - name: Check CodeDeploy apps
        run: |
          echo "Listing CodeDeploy applications..."
          aws deploy list-applications
          
          echo "Checking if target CodeDeploy app exists..."
          if aws deploy get-application --application-name imi-codedeploy &>/dev/null; then
            echo "CodeDeploy application 'imi-codedeploy' exists!"
          
            echo "Listing deployment groups..."
            aws deploy list-deployment-groups --application-name imi-codedeploy
          else
            echo "CodeDeploy application 'imi-codedeploy' not found or not accessible"
          fi

      # 단순 S3 파일 업로드 테스트
      - name: Test S3 upload
        if: env.AWS_BUCKET_NAME != ''
        run: |
          echo "This is a test file from GitHub Actions" > test-file.txt
          echo "Uploading test file to S3..."
          aws s3 cp test-file.txt s3://${{ env.AWS_BUCKET_NAME }}/github-actions-test/test-file.txt
          echo "Upload complete!"